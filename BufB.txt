//   Copyright 2020 Colin Deane
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//	   		http://www.apache.org/licenses/LICENSE-2.0
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//		File name: Buffer B
//		Purpose: Keep the bright spots of the image gotten in Buffer A bright and keep the dark spots dark
//
// mainImage: Calculate the bright parts of the image
//
// Source for multiplying color by luma from OpenGL SuperBible by Sellers, Wright. Jr, and Haemel
//		Link: https://f.usemind.org/files/b/1/UseMind.ORG_comprehensive-tutorial-and-reference_2015__.pdf
//			Page: 486
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Get the UV Coordinate
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // Get the color from buffer A
    vec4 color = texture(iChannel0, uv);
    
    // Calculate the Luma
    float luma = calcLuma(color);
    // Multiply the color by the luma a bunch to get black/white
    fragColor = color * luma * luma * luma;
}